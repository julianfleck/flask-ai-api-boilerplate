version: '3.8'

services:
  api:
    build: .
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - .env.prod
    depends_on:
      - db
    command: gunicorn --workers ${GUNICORN_WORKERS:-4} --bind ${API_HOST}:${API_PORT} "app.main:create_app()"

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
      - POSTGRES_DB=${POSTGRES_DB:-api_prod}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backup:
    build: .
    volumes:
      - backup_data:/backups
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
      - POSTGRES_DB=${POSTGRES_DB:-api_prod}
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-@daily}
      - BACKUP_KEEP_DAYS=${BACKUP_KEEP_DAYS:-7}
      - BACKUP_KEEP_WEEKS=${BACKUP_KEEP_WEEKS:-4}
      - BACKUP_KEEP_MONTHS=${BACKUP_KEEP_MONTHS:-6}
      - BACKUP_COMPRESSION=${BACKUP_COMPRESSION:-true}
    command: crond -f -d 8
    depends_on:
      - db

volumes:
  postgres_data:
  backup_data: 